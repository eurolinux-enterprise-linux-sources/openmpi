diff -upr openmpi-1.8.1-old/ompi/communicator/comm_cid.c openmpi-1.8.1-new/ompi/communicator/comm_cid.c
--- openmpi-1.8.1-old/ompi/communicator/comm_cid.c	2014-04-22 10:51:20.000000000 -0400
+++ openmpi-1.8.1-new/ompi/communicator/comm_cid.c	2014-05-30 15:25:18.259637470 -0400
@@ -1,4 +1,4 @@
-/* -*- Mode: C; c-basic-offset:4 ; -*- */
+/* -*- Mode: C; c-basic-offset:4 ; indent-tabs-mode:nil -*- */
 /*
  * Copyright (c) 2004-2005 The Trustees of Indiana University and Indiana
  *                         University Research and Technology
@@ -14,7 +14,7 @@
  * Copyright (c) 2007      Voltaire All rights reserved.
  * Copyright (c) 2006-2010 University of Houston.  All rights reserved.
  * Copyright (c) 2009      Sun Microsystems, Inc.  All rights reserved.
- * Copyright (c) 2012-2013 Los Alamos National Security, LLC.  All rights
+ * Copyright (c) 2012-2014 Los Alamos National Security, LLC.  All rights
  *                         reserved.
  * Copyright (c) 2012      Oak Ridge National Labs.  All rights reserved.
  * Copyright (c) 2013      Intel, Inc.  All rights reserved.
@@ -248,6 +248,7 @@ int ompi_comm_nextcid ( ompi_communicato
         }
         OPAL_THREAD_UNLOCK(&ompi_cid_lock);
 
+        nextlocal_cid = mca_pml.pml_max_contextid;
         for (i=start; i < mca_pml.pml_max_contextid ; i++) {
             flag = opal_pointer_array_test_and_set_item(&ompi_mpi_communicators,
                                                         i, comm);
@@ -260,8 +261,19 @@ int ompi_comm_nextcid ( ompi_communicato
         ret = (allredfnct)(&nextlocal_cid, &nextcid, 1, MPI_MAX, comm, bridgecomm,
                            local_leader, remote_leader, send_first );
         if( OMPI_SUCCESS != ret ) {
-            return ret;
+            opal_pointer_array_set_item(&ompi_mpi_communicators, nextlocal_cid, NULL);
+	    goto release_and_return;
+        }
+
+        if (mca_pml.pml_max_contextid == (unsigned int) nextcid) {
+            /* at least one peer ran out of CIDs */
+            if (1 == flag) {
+                opal_pointer_array_set_item(&ompi_mpi_communicators, nextlocal_cid, NULL);
+                ret = OMPI_ERR_OUT_OF_RESOURCE;
+                goto release_and_return;
+            }
         }
+
         if (nextcid == nextlocal_cid) {
             response = 1; /* fine with me */
         }
@@ -282,7 +294,8 @@ int ompi_comm_nextcid ( ompi_communicato
         ret = (allredfnct)(&response, &glresponse, 1, MPI_MIN, comm, bridgecomm,
                            local_leader, remote_leader, send_first );
         if( OMPI_SUCCESS != ret ) {
-            return ret;
+            opal_pointer_array_set_item(&ompi_mpi_communicators, nextcid, NULL);
+            goto release_and_return;
         }
         if (1 == glresponse) {
             done = 1;             /* we are done */
@@ -302,9 +315,10 @@ int ompi_comm_nextcid ( ompi_communicato
     newcomm->c_contextid = nextcid;
     opal_pointer_array_set_item (&ompi_mpi_communicators, nextcid, newcomm);
 
+release_and_return:
     ompi_comm_unregister_cid (comm->c_contextid);
 
-    return (MPI_SUCCESS);
+    return ret;
 }
 
 /* Non-blocking version of ompi_comm_nextcid */
@@ -398,6 +412,7 @@ static int ompi_comm_allreduce_getnextci
     }
     OPAL_THREAD_UNLOCK(&ompi_cid_lock);
 
+    context->nextlocal_cid = mca_pml.pml_max_contextid;
     for (i = context->start ; i < mca_pml.pml_max_contextid ; ++i) {
         flag = opal_pointer_array_test_and_set_item(&ompi_mpi_communicators,
                                                     i, context->comm);
@@ -419,6 +434,15 @@ static int ompi_comm_allreduce_getnextci
         return ret;
     }
 
+    if ((unsigned int) context->nextlocal_cid == mca_pml.pml_max_contextid) {
+        /* at least one peer ran out of CIDs */
+        if (flag) {
+            opal_pointer_array_test_and_set_item(&ompi_mpi_communicators, context->nextlocal_cid, NULL);
+        }
+
+        return OMPI_ERR_OUT_OF_RESOURCE;
+    }
+
     /* next we want to verify that the resulting commid is ok */
     ompi_comm_request_schedule_append (request, ompi_comm_checkcid, &subreq, 1);
 
Only in openmpi-1.8.1-new/ompi/communicator: comm_cid.c.orig
Only in openmpi-1.8.1-new/ompi/communicator: comm_cid.c.rej
diff -upr openmpi-1.8.1-old/ompi/mca/osc/rdma/osc_rdma.c openmpi-1.8.1-new/ompi/mca/osc/rdma/osc_rdma.c
--- openmpi-1.8.1-old/ompi/mca/osc/rdma/osc_rdma.c	2014-04-22 10:51:26.000000000 -0400
+++ openmpi-1.8.1-new/ompi/mca/osc/rdma/osc_rdma.c	2014-05-30 15:25:25.331933916 -0400
@@ -51,23 +51,27 @@ ompi_osc_rdma_free(ompi_win_t *win)
     ompi_osc_rdma_module_t *module = GET_MODULE(win);
     opal_list_item_t *item;
 
-    assert (NULL != module);
+    if (NULL == module) {
+        return OMPI_SUCCESS;
+    }
 
-    opal_output_verbose(1, ompi_osc_base_framework.framework_output,
-                        "rdma component destroying window with id %d",
-                        ompi_comm_get_cid(module->comm));
-
-    /* finish with a barrier */
-    if (ompi_group_size(win->w_group) > 1) {
-        ret = module->comm->c_coll.coll_barrier(module->comm,
-                                                  module->comm->c_coll.coll_barrier_module);
-    }
-
-    /* remove from component information */
-    OPAL_THREAD_LOCK(&mca_osc_rdma_component.lock);
-    opal_hash_table_remove_value_uint32(&mca_osc_rdma_component.modules,
-                                              ompi_comm_get_cid(module->comm));
-    OPAL_THREAD_UNLOCK(&mca_osc_rdma_component.lock);
+    if (NULL != module->comm) {
+        opal_output_verbose(1, ompi_osc_base_framework.framework_output,
+                            "rdma component destroying window with id %d",
+                            ompi_comm_get_cid(module->comm));
+
+        /* finish with a barrier */
+        if (ompi_group_size(win->w_group) > 1) {
+            ret = module->comm->c_coll.coll_barrier(module->comm,
+                                                    module->comm->c_coll.coll_barrier_module);
+        }
+
+        /* remove from component information */
+        OPAL_THREAD_LOCK(&mca_osc_rdma_component.lock);
+        opal_hash_table_remove_value_uint32(&mca_osc_rdma_component.modules,
+                                            ompi_comm_get_cid(module->comm));
+        OPAL_THREAD_UNLOCK(&mca_osc_rdma_component.lock);
+    }
 
     win->w_osc_module = NULL;
 
@@ -80,7 +84,7 @@ ompi_osc_rdma_free(ompi_win_t *win)
     /* it is erroneous to close a window with active operations on it so we should
      * probably produce an error here instead of cleaning up */
     while (NULL != (item = opal_list_remove_first (&module->pending_acc))) {
-	OBJ_RELEASE(item);
+        OBJ_RELEASE(item);
     }
 
     OBJ_DESTRUCT(&module->pending_acc);
@@ -94,14 +98,16 @@ ompi_osc_rdma_free(ompi_win_t *win)
     if (NULL != module->passive_incoming_frag_count) free(module->passive_incoming_frag_count);
     if (NULL != module->passive_incoming_frag_signal_count) free(module->passive_incoming_frag_signal_count);
     if (NULL != module->epoch_outgoing_frag_count) free(module->epoch_outgoing_frag_count);
-    if (NULL != module->incoming_buffer) free (module->incoming_buffer);
-    if (NULL != module->comm) ompi_comm_free(&module->comm);
-    if (NULL != module->free_after) free(module->free_after);
-
     if (NULL != module->frag_request) {
-	module->frag_request->req_complete_cb = NULL;
-	ompi_request_cancel (module->frag_request);
+        module->frag_request->req_complete_cb = NULL;
+        ompi_request_cancel (module->frag_request);
+        ompi_request_free (&module->frag_request);
+    }
+    if (NULL != module->comm) {
+        ompi_comm_free(&module->comm);
     }
+    if (NULL != module->incoming_buffer) free (module->incoming_buffer);
+    if (NULL != module->free_after) free(module->free_after);
 
     free (module);
 
diff -upr openmpi-1.8.1-old/ompi/mca/osc/rdma/osc_rdma_component.c openmpi-1.8.1-new/ompi/mca/osc/rdma/osc_rdma_component.c
--- openmpi-1.8.1-old/ompi/mca/osc/rdma/osc_rdma_component.c	2014-04-22 10:51:26.000000000 -0400
+++ openmpi-1.8.1-new/ompi/mca/osc/rdma/osc_rdma_component.c	2014-05-30 15:25:25.331933916 -0400
@@ -485,6 +485,8 @@ component_select(struct ompi_win_t *win,
     return OMPI_SUCCESS;
 
  cleanup:
+    /* set the module so we properly cleanup */
+    win->w_osc_module = (ompi_osc_base_module_t*) module;
     ompi_osc_rdma_free (win);
 
     return ret;
